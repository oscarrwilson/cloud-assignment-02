name: Node.js CI

on:
  push:
    branches:
      - '*'        # Wildcard to match all branches
  pull_request:
    branches:
      - '*'        # Wildcard to match all branches

jobs:
  lint-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16, 18, 20]  # Test on multiple Node.js versions

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Step 3: Cache Node.js modules
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}

      # Step 4: Build Docker Image
      - name: Build Docker Image
        run: docker build -t my-app .

      # Step 5: Run Tests Inside the Docker Container
      - name: Run tests inside Docker
        run: |
          docker run --rm my-app npm test

      # Step 6: Run linting
      - name: Run linting
        run: npm run lint  # Ensure you have eslint set up in your project

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: lint-test

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/charcount-app:latest -t ${{ secrets.DOCKER_USERNAME }}/charcount-app:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/charcount-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/charcount-app:${{ github.sha }}