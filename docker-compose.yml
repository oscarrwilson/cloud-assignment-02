services:
  reverse-proxy:
    build:
      context: ./editor-reverse-proxy
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - ./editor-frontend/src:/app/frontend/src
    depends_on:
      - charcount
      - wordcount
      - vowelcount
      - punctuationcount
      - avgwordlength
      - text-service
    healthcheck:
      test: curl -f http://localhost:8080/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    build:
      context: ./editor-frontend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: ${NODE_ENV}
    command: ["npm", "run", "build"]

  charcount:
    build:
      context: ./editor-charcount
      dockerfile: Dockerfile
    ports:
      - "${CHARCOUNT_PORT}:${CHARCOUNT_PORT}"
    expose:
      - "${CHARCOUNT_PORT}"
    environment:
      PORT: ${CHARCOUNT_PORT}

  wordcount:
    build:
      context: ./editor-wordcount
      dockerfile: Dockerfile
    ports:
      - "${WORDCOUNT_PORT}:80"
    expose:
      - "80:${WORDCOUNT_PORT}"
    environment:
      PORT: ${WORDCOUNT_PORT}

  vowelcount:
    build:
      context: ./editor-vowelcount
      dockerfile: Dockerfile
    ports:
      - "${VOWELCOUNT_PORT}:${VOWELCOUNT_PORT}"
    expose:
      - "${VOWELCOUNT_PORT}"
    environment:
      PORT: ${VOWELCOUNT_PORT}

  punctuationcount:
    build:
      context: ./editor-punctuationcount
      dockerfile: Dockerfile
    ports:
      - "${PUNCTUATIONCOUNT_PORT}:${PUNCTUATIONCOUNT_PORT}"
    expose:
      - "${PUNCTUATIONCOUNT_PORT}"
    environment:
      PORT: ${PUNCTUATIONCOUNT_PORT}

  avgwordlength:
    build:
      context: ./editor-avgwordlength
      dockerfile: Dockerfile
    ports:
      - "${AVGWORDLENGTH_PORT}:${AVGWORDLENGTH_PORT}"
    expose:
      - "${AVGWORDLENGTH_PORT}"
    environment:
      PORT: ${AVGWORDLENGTH_PORT}

  palindromedetection:
    build:
      context: ./editor-palindromedetection
      dockerfile: Dockerfile
    ports:
      - "${PALINDROMEDETECTION_PORT}:${PALINDROMEDETECTION_PORT}"
    expose:
      - "${PALINDROMEDETECTION_PORT}"
    environment:
      PORT: ${PALINDROMEDETECTION_PORT}

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  text-service:
    build:
      context: ./editor-database
      dockerfile: Dockerfile
    ports:
      - "4007:4007"
    environment:
      - MONGO_URL=mongodb://mongodb:27017/editor-database
    depends_on:
      - mongodb
    healthcheck:
      test: curl -f http://localhost:4007/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mongo-data: